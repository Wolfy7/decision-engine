name: Docker Build and Push Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push-postgres-dockerfile:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            tag: linux-amd64
            os: ubuntu-latest
          - platform: linux/arm64
            tag: linux-arm64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/postgres
          tags: |
            type=ref,event=branch,separator=_
            type=raw,value=${{ env.SHORT_SHA }}

      - name: Build Docker image (Dockerfile.postgres)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.postgres
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}-${{ matrix.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
        env:
          CARGO_INCREMENTAL: ${{ github.event_name == 'pull_request' && '1' || '0' }}
          RUSTFLAGS: "-A warnings"
          SCCACHE_ENABLE: "true"

      - name: Create and push manifest list
        run: |
          docker manifest create ghcr.io/${{ github.repository }}/postgres:${{ steps.meta.outputs.tags }} \
            ghcr.io/${{ github.repository }}/postgres:${{ steps.meta.outputs.tags }}-linux-amd64 \
            ghcr.io/${{ github.repository }}/postgres:${{ steps.meta.outputs.tags }}-linux-arm64
          docker manifest push ghcr.io/${{ github.repository }}/postgres:${{ steps.meta.outputs.tags }}

  build-and-push-dockerfile:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            os: ubuntu-latest
          - platform: linux/arm64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,separator=_
            type=raw,value=${{ env.SHORT_SHA }}

      - name: Build Docker image (Dockerfile)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}-${{ matrix.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
        env:
          CARGO_INCREMENTAL: ${{ github.event_name == 'pull_request' && '1' || '0' }}
          RUSTFLAGS: "-A warnings"
          SCCACHE_ENABLE: "true"

      - name: Create and push manifest list
        run: |
          docker manifest create ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.tags }} \
            ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.tags }}-linux-amd64 \
            ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.tags }}-linux-arm64
          docker manifest push ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.tags }}

  build-and-push-groovy-dockerfile:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/groovy-runner
          tags: |
            type=ref,event=branch,separator=_
            type=raw,value=${{ env.SHORT_SHA }}

      - name: Build and push Docker image (groovy.Dockerfile)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: groovy.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
