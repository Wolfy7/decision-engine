[log.console]
enabled = true
level = "DEBUG"
log_format = "default"

[server]
host = "127.0.0.1"
port = 8080

[limit]
request_count = 1
duration = 60

[database]
username = "root"
password = "root"
host = "127.0.0.1"
port = 3306
dbname = "jdb"

[redis]
host = "127.0.0.1"
port = 6379
pool_size = 5
reconnect_max_attempts = 5
reconnect_delay = 5
use_legacy_version = false
stream_read_count = 1
auto_pipeline = true
disable_auto_backpressure = false
max_in_flight_commands = 5000
default_command_timeout = 30
unresponsive_timeout = 10
max_feed_count = 200

[cache]
tti = 7200          # i.e. 2 hours
max_capacity = 5000

[secrets]
open_router_private_key = ""

[tenant_secrets]
public = { master_key = "", public_key = "", schema = "public" }

[routing_config.keys]
billing_country = { type = "enum", values = "AF, AX, AL, DZ, AS, AD, AO, AI, AQ, AG, AR, AM, AW, AU, AT, AZ, BS, BH, BD, BB, BY, BE, BZ, BJ, BM, BT, BO, BQ, BA, BW, BV, BR, IO, BN, BG, BF, BI, KH, CM, CA, CV, KY, CF, TD, CL, CN, CX, CC, CO, KM, CG, CD, CK, CR, CI, HR, CU, CW, CY, CZ, DK, DJ, DM, DO, EC, EG, SV, GQ, ER, EE, ET, FK, FO, FJ, FI, FR, GF, PF, TF, GA, GM, GE, DE, GH, GI, GR, GL, GD, GP, GU, GT, GG, GN, GW, GY, HT, HM, VA, HN, HK, HU, IS, IN, ID, IR, IQ, IE, IM, IL, IT, JM, JP, JE, JO, KZ, KE, KI, KP, KR, KW, KG, LA, LV, LB, LS, LR, LY, LI, LT, LU, MO, MK, MG, MW, MY, MV, ML, MT, MH, MQ, MR, MU, YT, MX, FM, MD, MC, MN, ME, MS, MA, MZ, MM, NA, NR, NP, NL, NC, NZ, NI, NE, NG, NU, NF, MP, NO, OM, PK, PW, PS, PA, PG, PY, PE, PH, PN, PL, PT, PR, QA, RE, RO, RU, RW, BL, SH, KN, LC, MF, PM, VC, WS, SM, ST, SA, SN, RS, SC, SL, SG, SX, SK, SI, SB, SO, ZA, GS, SS, ES, LK, SD, SR, SJ, SZ, SE, CH, SY, TW, TJ, TZ, TH, TL, TG, TK, TO, TT, TN, TR, TM, TC, TV, UG, UA, AE, GB, UM, UY, UZ, VU, VE, VN, VG, VI, WF, EH, YE, ZM, ZW, US" }  
business_country = { type = "enum", values = "AF, AX, AL, DZ, AS, AD, AO, AI, AQ, AG, AR, AM, AW, AU, AT, AZ, BS, BH, BD, BB, BY, BE, BZ, BJ, BM, BT, BO, BQ, BA, BW, BV, BR, IO, BN, BG, BF, BI, KH, CM, CA, CV, KY, CF, TD, CL, CN, CX, CC, CO, KM, CG, CD, CK, CR, CI, HR, CU, CW, CY, CZ, DK, DJ, DM, DO, EC, EG, SV, GQ, ER, EE, ET, FK, FO, FJ, FI, FR, GF, PF, TF, GA, GM, GE, DE, GH, GI, GR, GL, GD, GP, GU, GT, GG, GN, GW, GY, HT, HM, VA, HN, HK, HU, IS, IN, ID, IR, IQ, IE, IM, IL, IT, JM, JP, JE, JO, KZ, KE, KI, KP, KR, KW, KG, LA, LV, LB, LS, LR, LY, LI, LT, LU, MO, MK, MG, MW, MY, MV, ML, MT, MH, MQ, MR, MU, YT, MX, FM, MD, MC, MN, ME, MS, MA, MZ, MM, NA, NR, NP, NL, NC, NZ, NI, NE, NG, NU, NF, MP, NO, OM, PK, PW, PS, PA, PG, PY, PE, PH, PN, PL, PT, PR, QA, RE, RO, RU, RW, BL, SH, KN, LC, MF, PM, VC, WS, SM, ST, SA, SN, RS, SC, SL, SG, SX, SK, SI, SB, SO, ZA, GS, SS, ES, LK, SD, SR, SJ, SZ, SE, CH, SY, TW, TJ, TZ, TH, TL, TG, TK, TO, TT, TN, TR, TM, TC, TV, UG, UA, AE, GB, UM, UY, UZ, VU, VE, VN, VG, VI, WF, EH, YE, ZM, ZW, US" }  
business_label = { type = "global_ref" }
metadata = { type = "udf" }
payment_method_type = { type = "enum", values = "CARD, UPI_COLLECT, UPI_INTENT, WALLET, BANK_TRANSFER, PAY_LATER, BANK_REDIRECT, CRYPTO, ACH, AFFIRM, AFTERPAY_CLEARPAY, ALFAMART, ALIPAY, ALIPAY_HK, ALMA, AMAZON_PAY, APPLE_PAY, ATOME, BACS, BANCONTACT_CARD, BECS, BENEFIT, BIZUM, BLIK, BOLETO, BCA_BANK_TRANSFER, BNI_VA, BRI_VA, CARD_REDIRECT, CIMB_VA, CLASSIC_REWARD, CREDIT, CRYPTOCURRENCY, CASHAPP, DANA, DANAMON_VA, DEBIT, DUIT_NOW, EFECTY, EFT, EPS, FPS, EVOUCHER, GIROPAY, GIVEX, GOOGLE_PAY, GOPAY, GCASH, IDEAL, INTERAC, INDOMARET, INSTANT_BANK_TRANSFER, KLARNA, KAKAO_PAY, LOCAL_BANK_REDIRECT, MANDIRI_VA, KNET, MB_WAY, MOBILE_PAY, MOMO, MOMO_ATM, MULTIBANCO, ONLINE_BANKING_THAILAND, ONLINE_BANKING_CZECH_REPUBLIC, ONLINE_BANKING_FINLAND, ONLINE_BANKING_FPX, ONLINE_BANKING_POLAND, ONLINE_BANKING_SLOVAKIA, OXXO, PAGO_EFECTIVO, PERMATA_BANK_TRANSFER, OPEN_BANKING_UK, PAY_BRIGHT, PAYPAL, PAZE, PIX, PAY_SAFE_CARD, PRZELEWY24, PROMPT_PAY, PSE, RED_COMPRA, RED_PAGOS, SAMSUNG_PAY, SEPA, SEPA_BANK_TRANSFER, SOFORT, SWISH, TOUCH_N_GO, TRUSTLY, TWINT, VENMO, WALLEY, WECHAT_PAY, SEVEN_ELEVEN, LAWSON, MINI_STOP, FAMILY_MART, SEICOMART, PAY_EASY, LOCAL_BANK_TRANSFER, MIFINITY, OPEN_BANKING_PIS, DIRECT_CARRIER_BILLING" }  
payment_method = { type = "enum", values = "card, card_redirect, pay_later, wallet, bank_redirect, bank_transfer, crypto, bank_debit, reward, real_time_payment, upi, voucher, gift_card, open_banking, mobile_payment" }  
payment_card_bin = { type = "global_ref" }
payment_card_type = { type = "enum", values = "CREDIT, DEBIT" }
payment_card_network = { type = "enum", values = "VISA, MASTERCARD, AMERICAN_EXPRESS, JCB, DINERS_CLUB, DISCOVER, CARTES_BANCAIRES, UNION_PAY, INTERAC, RUPAY, MAESTRO" }  
mandate_acceptance_type = {type = "enum", values= "Online, Offline"}
mandate_type = {type = "enum", values= "SingleUse, MultiUse"}
payment_type = {type = "enum", values= "Normal, NewMandate, SetupMandate, RecurringMandate"}
amount = { type = "integer" }
currency = { type = "enum", values = "AED, AFN, ALL, AMD, ANG, AOA, ARS, AUD, AWG, AZN, BAM, BBD, BDT, BGN, BHD, BIF, BMD, BND, BOB, BRL, BSD, BTN, BWP, BYN, BZD, CAD, CDF, CHF, CLF, CLP, CNY, COP, CRC, CUC, CUP, CVE, CZK, DJF, DKK, DOP, DZD, EGP, ERN, ETB, EUR, FJD, FKP, GBP, GEL, GHS, GIP, GMD, GNF, GTQ, GYD, HKD, HNL, HRK, HTG, HUF, IDR, ILS, INR, IQD, IRR, ISK, JMD, JOD, JPY, KES, KGS, KHR, KMF, KPW, KRW, KWD, KYD, KZT, LAK, LBP, LKR, LRD, LSL, LYD, MAD, MDL, MGA, MKD, MMK, MNT, MOP, MRU, MUR, MVR, MWK, MXN, MYR, MZN, NAD, NGN, NIO, NOK, NPR, NZD, OMR, PAB, PEN, PGK, PHP, PKR, PLN, PYG, QAR, RON, RSD, RUB, RWF, SAR, SBD, SCR, SDG, SEK, SGD, SHP, SLE, SLL, SOS, SRD, SSP, STD, STN, SVC, SYP, SZL, THB, TJS, TMT, TND, TOP, TRY, TTD, TWD, TZS, UAH, UGX, USD, UYU, UZS, VES, VND, VUV, WST, XAF, XCD, XOF, XPF, YER, ZAR, ZMW, ZWL" }  
authentication_type = {type = "enum", values= "ThreeDs, NoThreeDs"}
capture_methods = {type = "enum", values= "Automatic, Manual, ManualMultiple, Scheduled, SequentialAutomatic"}
setup_future_usage = {type = "enum", values= "OnSession, OffSession"}
order_udf1 = { type = "global_ref" }
payment_card_issuer_country = { type = "enum", values = "AF, AX, AL, DZ, AS, AD, AO, AI, AQ, AG, AR, AM, AW, AU, AT, AZ, BS, BH, BD, BB, BY, BE, BZ, BJ, BM, BT, BO, BQ, BA, BW, BV, BR, IO, BN, BG, BF, BI, KH, CM, CA, CV, KY, CF, TD, CL, CN, CX, CC, CO, KM, CG, CD, CK, CR, CI, HR, CU, CW, CY, CZ, DK, DJ, DM, DO, EC, EG, SV, GQ, ER, EE, ET, FK, FO, FJ, FI, FR, GF, PF, TF, GA, GM, GE, DE, GH, GI, GR, GL, GD, GP, GU, GT, GG, GN, GW, GY, HT, HM, VA, HN, HK, HU, IS, IN, ID, IR, IQ, IE, IM, IL, IT, JM, JP, JE, JO, KZ, KE, KI, KP, KR, KW, KG, LA, LV, LB, LS, LR, LY, LI, LT, LU, MO, MK, MG, MW, MY, MV, ML, MT, MH, MQ, MR, MU, YT, MX, FM, MD, MC, MN, ME, MS, MA, MZ, MM, NA, NR, NP, NL, NC, NZ, NI, NE, NG, NU, NF, MP, NO, OM, PK, PW, PS, PA, PG, PY, PE, PH, PN, PL, PT, PR, QA, RE, RO, RU, RW, BL, SH, KN, LC, MF, PM, VC, WS, SM, ST, SA, SN, RS, SC, SL, SG, SX, SK, SI, SB, SO, ZA, GS, SS, ES, LK, SD, SR, SJ, SZ, SE, CH, SY, TW, TJ, TZ, TH, TL, TG, TK, TO, TT, TN, TR, TM, TC, TV, UG, UA, AE, GB, UM, UY, UZ, VU, VE, VN, VG, VI, WF, EH, YE, ZM, ZW, US" }  
payment_payment_method = { type = "enum", values = "NB_HDFC, NB_ICICI, NB_SBI" }
payment_payment_source = { type = "enum", values = "net.one97.paytm, @paytm" }
txn_is_emi = { type = "enum", values = "true, false" }

[routing_config.default]
output = ["stripe", "adyen"]

[[routing_config.constraint_graph.nodes]]
preds = []
succs = [0]

[routing_config.constraint_graph.nodes.kind]
kind = "value"

[routing_config.constraint_graph.nodes.kind.data]
kind = "value"

[routing_config.constraint_graph.nodes.kind.data.data]
key = "payment_method"
comparison = "equal"

[routing_config.constraint_graph.nodes.kind.data.data.value]
type = "enum_variant"
value = "card"

[[routing_config.constraint_graph.nodes]]
preds = []
succs = [1]

[routing_config.constraint_graph.nodes.kind]
kind = "value"

[routing_config.constraint_graph.nodes.kind.data]
kind = "value"

[routing_config.constraint_graph.nodes.kind.data.data]
key = "payment_method"
comparison = "equal"

[routing_config.constraint_graph.nodes.kind.data.data.value]
type = "enum_variant"
value = "bank_debit"

[[routing_config.constraint_graph.nodes]]
preds = [0]
succs = []

[routing_config.constraint_graph.nodes.kind]
kind = "value"

[routing_config.constraint_graph.nodes.kind.data]
kind = "value"

[routing_config.constraint_graph.nodes.kind.data.data]
key = "output"
comparison = "equal"

[routing_config.constraint_graph.nodes.kind.data.data.value]
type = "enum_variant"
value = "stripe"

[[routing_config.constraint_graph.nodes]]
preds = [1]
succs = []

[routing_config.constraint_graph.nodes.kind]
kind = "value"

[routing_config.constraint_graph.nodes.kind.data]
kind = "value"

[routing_config.constraint_graph.nodes.kind.data.data]
key = "output"
comparison = "equal"

[routing_config.constraint_graph.nodes.kind.data.data.value]
type = "enum_variant"
value = "adyen"

[[routing_config.constraint_graph.edges]]
strength = "strong"
relation = "positive"
pred = 0
succ = 2

[[routing_config.constraint_graph.edges]]
strength = "strong"
relation = "positive"
pred = 1
succ = 3

[debit_routing_config]
fraud_check_fee = 0.01

[debit_routing_config.network_fee]
visa = { percentage = 0.1375, fixed_amount = 0.020 }
star = { percentage = 0.1000, fixed_amount = 0.015 }

[debit_routing_config.interchange_fee]
regulated = { percentage = 0.05, fixed_amount = 0.21 }

[debit_routing_config.interchange_fee.non_regulated]
merchant_category_code_0001.visa = { percentage = 1.65, fixed_amount = 0.15 }
merchant_category_code_0001.star = { percentage = 1.63, fixed_amount = 0.15 }
